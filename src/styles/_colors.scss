$_colors: (
  default: (
    background: (
      color: #dfe1e6,
      static: true,
    ),
    page: (
      color: white,
    ),
    text: (
      color: black,
      static: true,
    ),
    alt-text: (
      color: #737373,
      static: true,
    ),
  ),
  dark: (
    background: (
      color: #393939,
      static: true,
    ),
    page: (
      color: #252525,
    ),
    text: (
      color: #ccc,
      static: true,
    ),
    alt-text: (
      color: #8c8c8c,
      static: true,
    ),
  ),
);

@function _hexToRgb($hex) {
  @return #{red($hex)}, #{green($hex)}, #{blue($hex)};
}

@mixin _create-color($color, $config) {
  $hex: map-get($config, color);
  --#{$color}: #{_hexToRgb($hex)};

  @if not map-get($config, static) {
    --#{$color}--h: #{_hexToRgb(darken($hex, 5%))};
    --#{$color}--a: #{_hexToRgb(darken($hex, 10%))};
  }
}

@mixin init($local-colors: (), $theme: default) {
  $colors: map-get($_colors, $theme);
  @if $theme == default {
    :root {
      @each $color, $config in map-merge($colors, $local-colors) {
        @include _create-color($color, $config);
      }
    }
  } @else {
    .#{$theme} {
      @each $color, $config in map-merge($colors, $local-colors) {
        @include _create-color($color, $config);
      }
    }
  }
}

$_modifier-map: (
  hover: h,
  active: a,
);

@function get-color($color, $modifier: null, $alpha: 1) {
  $m: map-get($_modifier-map, $modifier);
  $var: --#{$color};
  @if ($m) {
    $var: #{$var}--#{$m};
  }
  @return rgba(var(#{$var}), #{$alpha});
}
